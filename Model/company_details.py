from sqlalchemy import Column, Integer, String, Text, Float, Boolean
from Model.base import Base

class Company_Details(Base):
    '''
    Company Details table class creation.

    Columns: 
        TODO: Add the column names and short description.
    '''

    __tablename__ = 'CompanyDetails'
    '''
    The name of the table that will be registered on the Database.
    '''

    companyDetailsId = Column(Integer, primary_key=True, nullable=False)
    tickerId = Column(Integer, nullable=False)
    companyName = Column(String)
    sector = Column(String)
    industry = Column(String)
    fullTimeEmployees = Column(Integer)
    longBusinessSummary = Column(Text)
    city = Column(String)
    state = Column(String)
    country = Column(String)
    website = Column(String)
    ebitdaMargins = Column(Float)
    profitMargins = Column(Float)
    grossMargins = Column(Float)
    operatingCashflow = Column(Integer)
    revenueGrowth = Column(Float)
    operatingMargins = Column(Float)
    ebitda = Column(Integer)
    targetLowPrice = Column(Integer)
    grossProfits = Column(Integer)
    freeCashflow = Column(Integer)
    targetMedianPrice = Column(Integer)
    currentPrice = Column(Float)
    earningsGrowth = Column(Float)
    currentRatio = Column(Float)
    returnOnAssets = Column(Float)
    numberOfAnalystOpinions = Column(Integer)
    targetMeanPrice = Column(Float)
    debtToEquity = Column(Float)
    returnOnEquity = Column(Float)
    targetHighPrice = Column(Integer)
    totalCash = Column(Integer)
    totalDebt = Column(Integer)
    totalRevenue = Column(Integer)
    totalCashPerShare = Column(Float)
    financialCurrency = Column(String)
    revenuePerShare = Column(Float)
    quickRatio = Column(Float)
    recommendationMean = Column(Float)
    exchange = Column(String)
    shortName = Column(String)
    longName = Column(String)
    exchangeTimezoneName = Column(String)
    exchangeTimezoneShortName = Column(String)
    quoteType = Column(String)
    symbol = Column(String)
    messageBoardId = Column(String)
    market = Column(String)
    annualHoldingsTurnover = Column(Float)
    enterpriseToRevenue = Column(Float)
    enterpriseToEbitda = Column(Float)
    _52WeekChange = Column(Float)
    forwardEps = Column(Float)
    revenueQuarterlyGrowth = Column(Float)
    sharesOutstanding = Column(Integer)
    annualReportExpenseRatio = Column(Float)
    totalAssets = Column(Integer)
    bookValue = Column(Float)
    sharesShort = Column(Integer)
    sharesPercentSharesOut = Column(Float)
    lastFiscalYearEnd = Column(Integer)
    heldPercentInstitutions = Column(Float)
    netIncomeToCommon = Column(Integer)
    trailingEps = Column(Float)
    lastDividendValue = Column(Float)
    SandP52WeekChange = Column(Float)
    priceToBook = Column(Float)
    heldPercentInsiders = Column(Float)
    nextFiscalYearEnd = Column(Integer)
    mostRecentQuarter = Column(Integer)
    shortRatio = Column(Float)
    sharesShortPreviousMonthDate = Column(Integer)
    floatShares = Column(Integer)
    beta = Column(Float)
    enterpriseValue = Column(Integer)
    priceHint = Column(Integer)
    lastSplitDate = Column(Integer)
    lastSplitFactor = Column(String)
    lastDividendDate = Column(Integer)
    earningsQuarterlyGrowth = Column(Float)
    priceToSalesTrailing12Months = Column(Float)
    dateShortInterest = Column(Integer)
    pegRatio = Column(Float)
    forwardPE = Column(Float)
    shortPercentOfFloat = Column(Float)
    sharesShortPriorMonth = Column(Integer)
    impliedSharesOutstanding = Column(Integer)
    category = Column(String)
    previousClose = Column(Float)
    regularMarketOpen = Column(Float)
    twoHundredDayAverage = Column(Float)
    trailingAnnualDividendYield = Column(Float)
    payoutRatio = Column(Float)
    regularMarketDayHigh = Column(Float)
    averageDailyVolume10Day = Column(Integer)
    regularMarketPreviousClose = Column(Float)
    fiftyDayAverage = Column(Float)
    trailingAnnualDividendRate = Column(Float)
    open = Column(Float)
    averageVolume10days = Column(Integer)
    dividendRate = Column(Float)
    exDividendDate = Column(Integer)
    regularMarketDayLow = Column(Float)
    currency = Column(String)
    trailingPE = Column(Float)
    regularMarketVolume = Column(Integer)
    marketCap = Column(Integer)
    averageVolume = Column(Integer)
    dayLow = Column(Float)
    ask = Column(Float)
    askSize = Column(Integer)
    volume = Column(Integer)
    fiftyTwoWeekHigh = Column(Float)
    fiveYearAvgDividendYield = Column(Float)
    fiftyTwoWeekLow = Column(Float)
    tradeable = Column(Boolean)
    dividendYield = Column(Float)
    bidSize = Column(Integer)
    dayHigh = Column(Float)
    regularMarketPrice = Column(Float)

    # def __repr__(self):
    #     return f'Company_Details(tickerId={self.tickerId!r}, stockMarket={self.stockMarket!r} tickerName={self.tickerName!r}, organizationName={self.organizationName!r})'
